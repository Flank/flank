/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.testing.model;

/**
 * The currently supported iOS devices.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Testing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IosDeviceCatalog extends com.google.api.client.json.GenericJson {

  /**
   * The set of supported iOS device models.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<IosModel> models;

  /**
   * The set of supported runtime configurations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IosRuntimeConfiguration runtimeConfiguration;

  /**
   * The set of supported iOS software versions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<IosVersion> versions;

  /**
   * The set of supported Xcode versions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<XcodeVersion> xcodeVersions;

  /**
   * The set of supported iOS device models.
   * @return value or {@code null} for none
   */
  public java.util.List<IosModel> getModels() {
    return models;
  }

  /**
   * The set of supported iOS device models.
   * @param models models or {@code null} for none
   */
  public IosDeviceCatalog setModels(java.util.List<IosModel> models) {
    this.models = models;
    return this;
  }

  /**
   * The set of supported runtime configurations.
   * @return value or {@code null} for none
   */
  public IosRuntimeConfiguration getRuntimeConfiguration() {
    return runtimeConfiguration;
  }

  /**
   * The set of supported runtime configurations.
   * @param runtimeConfiguration runtimeConfiguration or {@code null} for none
   */
  public IosDeviceCatalog setRuntimeConfiguration(IosRuntimeConfiguration runtimeConfiguration) {
    this.runtimeConfiguration = runtimeConfiguration;
    return this;
  }

  /**
   * The set of supported iOS software versions.
   * @return value or {@code null} for none
   */
  public java.util.List<IosVersion> getVersions() {
    return versions;
  }

  /**
   * The set of supported iOS software versions.
   * @param versions versions or {@code null} for none
   */
  public IosDeviceCatalog setVersions(java.util.List<IosVersion> versions) {
    this.versions = versions;
    return this;
  }

  /**
   * The set of supported Xcode versions.
   * @return value or {@code null} for none
   */
  public java.util.List<XcodeVersion> getXcodeVersions() {
    return xcodeVersions;
  }

  /**
   * The set of supported Xcode versions.
   * @param xcodeVersions xcodeVersions or {@code null} for none
   */
  public IosDeviceCatalog setXcodeVersions(java.util.List<XcodeVersion> xcodeVersions) {
    this.xcodeVersions = xcodeVersions;
    return this;
  }

  @Override
  public IosDeviceCatalog set(String fieldName, Object value) {
    return (IosDeviceCatalog) super.set(fieldName, value);
  }

  @Override
  public IosDeviceCatalog clone() {
    return (IosDeviceCatalog) super.clone();
  }

}
