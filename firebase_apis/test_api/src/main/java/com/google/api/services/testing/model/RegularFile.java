/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.testing.model;

/**
 * A file or directory to install on the device before the test starts.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Testing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RegularFile extends com.google.api.client.json.GenericJson {

  /**
   * Required. The source file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private FileReference content;

  /**
   * Required. Where to put the content on the device. Must be an absolute, allowlisted path. If the
   * file exists, it will be replaced. The following device-side directories and any of their
   * subdirectories are allowlisted: ${EXTERNAL_STORAGE}, /sdcard, or /storage
   * ${ANDROID_DATA}/local/tmp, or /data/local/tmp Specifying a path outside of these directory
   * trees is invalid. The paths /sdcard and /data will be made available and treated as implicit
   * path substitutions. E.g. if /sdcard on a particular device does not map to external storage,
   * the system will replace it with the external storage path prefix for that device and copy the
   * file there. It is strongly advised to use the Environment API in app and test code to access
   * files on the device in a portable way.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String devicePath;

  /**
   * Required. The source file.
   * @return value or {@code null} for none
   */
  public FileReference getContent() {
    return content;
  }

  /**
   * Required. The source file.
   * @param content content or {@code null} for none
   */
  public RegularFile setContent(FileReference content) {
    this.content = content;
    return this;
  }

  /**
   * Required. Where to put the content on the device. Must be an absolute, allowlisted path. If the
   * file exists, it will be replaced. The following device-side directories and any of their
   * subdirectories are allowlisted: ${EXTERNAL_STORAGE}, /sdcard, or /storage
   * ${ANDROID_DATA}/local/tmp, or /data/local/tmp Specifying a path outside of these directory
   * trees is invalid. The paths /sdcard and /data will be made available and treated as implicit
   * path substitutions. E.g. if /sdcard on a particular device does not map to external storage,
   * the system will replace it with the external storage path prefix for that device and copy the
   * file there. It is strongly advised to use the Environment API in app and test code to access
   * files on the device in a portable way.
   * @return value or {@code null} for none
   */
  public java.lang.String getDevicePath() {
    return devicePath;
  }

  /**
   * Required. Where to put the content on the device. Must be an absolute, allowlisted path. If the
   * file exists, it will be replaced. The following device-side directories and any of their
   * subdirectories are allowlisted: ${EXTERNAL_STORAGE}, /sdcard, or /storage
   * ${ANDROID_DATA}/local/tmp, or /data/local/tmp Specifying a path outside of these directory
   * trees is invalid. The paths /sdcard and /data will be made available and treated as implicit
   * path substitutions. E.g. if /sdcard on a particular device does not map to external storage,
   * the system will replace it with the external storage path prefix for that device and copy the
   * file there. It is strongly advised to use the Environment API in app and test code to access
   * files on the device in a portable way.
   * @param devicePath devicePath or {@code null} for none
   */
  public RegularFile setDevicePath(java.lang.String devicePath) {
    this.devicePath = devicePath;
    return this;
  }

  @Override
  public RegularFile set(String fieldName, Object value) {
    return (RegularFile) super.set(fieldName, value);
  }

  @Override
  public RegularFile clone() {
    return (RegularFile) super.clone();
  }

}
