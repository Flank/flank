name: macOS-workflow

on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - '*'
    paths:
      - '**'
      - '!flank-scripts/**'

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: true
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-2-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-2-gradle-
        
    - name: Codecov
      uses: codecov/codecov-action@v1.0.7
      with:
        # Repository upload token - get it from codecov.io. Required only for private repositories
        token: ${{secrets.CODECOV_TOKEN}}

    - name: Gradle clean build
      uses: eskatos/gradle-command-action@v1
      with:
          arguments: "clean build"

    - name: Prepare Google Service Account
      env:
        GCLOUD_KEY: ${{ secrets.GCLOUD_KEY }}
      run: |
        GCLOUD_DIR="$HOME/.config/gcloud/"
        mkdir -p "$GCLOUD_DIR"
        echo "$GCLOUD_KEY" | base64 --decode > "$GCLOUD_DIR/application_default_credentials.json"

    - name: Gradle Integration Tests Android
      uses: eskatos/gradle-command-action@v1
      with:
        arguments: "--info :integration_tests:test --tests IntegrationTests.shouldMatchAndroidSuccessExitCodeAndPattern -Dflank-path=../test_runner/build/libs/flank.jar -Dyml-path=./src/test/resources/flank_android.yml"

    - name: Gradle Integration Tests iOS
      uses: eskatos/gradle-command-action@v1
      with:
        arguments: "--info :integration_tests:test --tests IntegrationTests.shouldMatchIosSuccessExitCodeAndPattern -Dflank-path=../test_runner/build/libs/flank.jar -Dyml-path=./src/test/resources/flank_ios.yml"
