name: "[Code Health] Run update dependencies"

on:
  workflow_dispatch:

# TODO: update workflow permissions to least privilege after auditing all the APIs used
# permissions:  # limit the permissions of the GITHIUB_TOKEN to reading repository contents
#   contents: read

jobs:
  get_date:
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

  update_dependencies:
    runs-on: macos-latest
    needs: [ get_date ]
    steps:
      - uses: actions/checkout@v4
      - uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.FLANK_RELEASE_APP_ID }}
          private_key: ${{ secrets.FLANK_RELEASE_PRIVATE_KEY }}

      - name: Gradle dependency updates raport
        uses: gradle/gradle-build-action@v3.5.0
        with:
          arguments: dependencyUpdates -DoutputFormatter=json -DoutputDir=.

      - name: Download flankScripts and add it to PATH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew :flank-scripts:download
          echo "./flank-scripts/bash" >> $GITHUB_PATH

      - name: Update dependencies
        run: |
          flankScripts dependencies update

      - name: Commit files and create Pull request
        id: pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-message: "[Automatic PR] Dependencies update"
          signoff: false
          branch: "dependencies-update-${{ needs.get_date.outputs.date }}"
          title: "build: Dependencies updates [${{ needs.get_date.outputs.date }}]"
          body: "Dependencies updates"
          labels: |
            automated pr
            dependencies
          reviewers: adamvduke,jakeouellette,tonybaroneee
          draft: false

  update_firebase_api:
    runs-on: macos-latest
    needs: [ get_date ]
    steps:
      - uses: actions/checkout@v4
      - uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.FLANK_RELEASE_APP_ID }}
          private_key: ${{ secrets.FLANK_RELEASE_PRIVATE_KEY }}

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '2.x'

      - name: Download flankScripts and add it to PATH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew :flank-scripts:download
          echo "./flank-scripts/bash" >> $GITHUB_PATH

      - name: Update Java Client
        run: |
          pip install google-apis-client-generator
          flankScripts firebase update_api
          flankScripts firebase generate_client

      - name: Commit files and create Pull request
        id: pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-message: "[Automatic PR] Firebase API Client update"
          signoff: false
          branch: "firebase-api-client-update-${{ needs.get_date.outputs.date }}"
          title: "build: Firebase API Client update [${{ needs.get_date.outputs.date }}]"
          body: "Firebase Api update"
          labels: |
            automated pr
            firease_api
          reviewers: adamvduke,jakeouellette,tonybaroneee
          draft: false

  check_for_sdk_updates:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download flankScripts and add it to PATH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew :flank-scripts:download
          echo "./flank-scripts/bash" >> $GITHUB_PATH

      - name: Run SDK check
        run: |
          flankScripts firebase check_for_sdk_updates \
          --github-token=${{ secrets.GITHUB_TOKEN }} \

  trigger-pointer:
    runs-on: ubuntu-latest
    needs: [ check_for_sdk_updates ]
    if: always()
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
          # TODO: change to 'egress-policy: block' after auditing a number of runs and updating the allowed-endpoints option accordingly

      - uses: tibdex/github-app-token@v2
        id: generate-token
        with:
          app_id: ${{ secrets.FLANK_RELEASE_APP_ID }}
          private_key: ${{ secrets.FLANK_RELEASE_PRIVATE_KEY }}

      - name: Dispatch repository event
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.generate-token.outputs.token }}
          event-type: dependencies-pointer
