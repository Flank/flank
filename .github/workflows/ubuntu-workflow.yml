name: ubuntu-workflow

on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - '*'
    paths:
      - '**'
      - '!flank-scripts/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with: 
          submodules: true
      - name: Display the java version
        run: java -version 
        shell: bash

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle clean build
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: "clean build"

      - name: Prepare Google Service Account
        env:
          GCLOUD_KEY: ${{ secrets.GCLOUD_KEY }}
        run: |
          GCLOUD_DIR="$HOME/.config/gcloud/"
          mkdir -p "$GCLOUD_DIR"
          echo "$GCLOUD_KEY" | base64 --decode > "$GCLOUD_DIR/application_default_credentials.json"

      - name: Gradle Integration Tests Android
        uses: eskatos/gradle-command-action@v1
        with:
          gradle-executable: "./integration_tests/gradlew"
          arguments: "--info -p integration_tests test --tests IntegrationTests.shouldMatchAndroidSuccessExitCodeAndPattern -Dflank-path=../test_runner/build/libs/flank.jar -Dyml-path=./src/test/resources/flank_android.yml"

      - name: Gradle Integration Tests iOS
        uses: eskatos/gradle-command-action@v1
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          gradle-executable: "./integration_tests/gradlew"
          arguments: "--info  -p integration_tests test --tests IntegrationTests.shouldMatchIosSuccessExitCodeAndPattern -Dflank-path=../test_runner/build/libs/flank.jar -Dyml-path=./src/test/resources/flank_ios.yml"
