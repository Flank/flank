name: RELEASE

# Run when push on master or create tag with version [v*] for only changes to the test_runner/**
on:
  push:
    paths:
      - 'test_runner/**'
      - 'firebase_api/test_api/**'
    branches:
      - 'master'
    tags: v*

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: true

    - name: Get all git tags
      run: |
        git fetch --prune --unshallow --tags -f
        git tag

    - name: Gradle Build flankScripts and add it to PATH
      run: |
        ./flank-scripts/bash/buildFlankScripts.sh
        echo "./flank-scripts/bash" >> $GITHUB_PATH

    - name: Set env variables
      run: |
        echo "MVN_REVISION=$(echo $GITHUB_SHA)" >> $GITHUB_ENV

          if [[ $GITHUB_REF == refs/tags/* ]]
            then
              echo "MVN_VERSION=$(echo ${GITHUB_REF:11})" >> $GITHUB_ENV
              echo "RELEASE_TAG=$(echo ${GITHUB_REF:10})" >> $GITHUB_ENV
            else
              echo "RELEASE_TAG=flank_snapshot" >> $GITHUB_ENV
              echo "MVN_VERSION=flank_snapshot" >> $GITHUB_ENV
              git_short_hash=$(git rev-parse --short "$GITHUB_SHA")
              echo "GIT_SHORT_HASH=$(echo $git_short_hash)" >> $GITHUB_ENV
          fi;

    - name: Store version variables to file
      run: |
          echo "$GITHUB_SHA" > ./test_runner/src/main/resources/revision.txt
          echo "$RELEASE_TAG" > ./test_runner/src/main/resources/version.txt
    
    - name: Update bugsnag
      run: flankScripts release updateBugsnag --bugsnag-api-key=${{ secrets.BUGSNAG_API_KEY }} --app-version=${GITHUB_SHA}

    - name: Get Jfrog CLI
      run: |
        brew install jfrog-cli-go
        jfrog bt config --user ${{ secrets.JFROG_USER }} --key ${{ secrets.JFROG_API_KEY }} --licenses Apache-2.0  
    
    - name: Delete old snapshot
      run: flankScripts release jFrogDelete --version=$MVN_VERSION

    - name: Gradle Build Flank
      uses: eskatos/gradle-command-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HEAD_REF: ${{ github.head_ref }}
      with:
        arguments: "clean test_runner:build test_runner:shadowJar"
        
    - name: Gradle Upload to bintray
      uses: eskatos/gradle-command-action@v1
      with:
        arguments: "test_runner:bintrayUpload -PJFROG_API_KEY=${{ secrets.JFROG_API_KEY }} -PJFROG_USER=${{ secrets.JFROG_USER }}"

    - name: Authenticate to hub
      run: |
            mkdir -p ~/.config/

            cat << EOF > ~/.config/hub
            github.com:
            - user: $GITHUB_ACTOR
              oauth_token: ${{ secrets.GITHUB_TOKEN }}
              protocol: https
            EOF

    - name: Delete old release
      run: |
        hub version
        flankScripts release deleteOldRelease --git-tag=$RELEASE_TAG

    - name: Delete old tag
      if: ${{ env.RELEASE_TAG == 'flank_snapshot' }}
      run: flankScripts release deleteOldTag --git-tag=$RELEASE_TAG --username=$GITHUB_ACTOR --token=${{ secrets.GITHUB_TOKEN }}

    - name: Release snapshot
      if: ${{ env.RELEASE_TAG == 'flank_snapshot' }} 
      run: flankScripts release releaseFlank --input-file=./test_runner/build/libs/flank.jar --git-tag=$RELEASE_TAG --commit-hash=$GIT_SHORT_HASH --snapshot

    - name: Release stable
      if: startsWith(github.ref, 'refs/tags/v')
      run: flankScripts release releaseFlank --input-file=./test_runner/build/libs/flank.jar --git-tag=$RELEASE_TAG --token=${{ secrets.GITHUB_TOKEN }}

    - name: Sync bintray to maven central
      run: flankScripts release jFrogSync --maven-tag=$MVN_VERSION

    - name: Gradle Upload to GitHub packages
      uses: eskatos/gradle-command-action@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        arguments: "test_runner:publish -PGITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}"

    - name: Post Message of Flank Release
      uses: Flank/flank@V1.3-action
      if: startsWith(github.ref, 'refs/tags/v')
      with:
          xoxctoken: ${{ secrets.SLACK_XOXCTOKEN }}
          message: Flank ${{ env.RELEASE_TAG }} has been released. View more information <http://github.com/Flank/flank/releases/tag/${{ env.RELEASE_TAG }}| here!>
          channel: ${{ secrets.SLACK_CHANNEL}}
          cookie: ${{ secrets.SLACK_COOKIE}}
