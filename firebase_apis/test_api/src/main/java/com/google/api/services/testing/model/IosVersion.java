/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.testing.model;

/**
 * An iOS version.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Testing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IosVersion extends com.google.api.client.json.GenericJson {

  /**
   * An opaque id for this iOS version. Use this id to invoke the TestExecutionService.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * An integer representing the major iOS version. Examples: "8", "9".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer majorVersion;

  /**
   * An integer representing the minor iOS version. Examples: "1", "2".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer minorVersion;

  /**
   * The available Xcode versions for this version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> supportedXcodeVersionIds;

  /**
   * Tags for this dimension. Examples: "default", "preview", "deprecated".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> tags;

  /**
   * An opaque id for this iOS version. Use this id to invoke the TestExecutionService.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * An opaque id for this iOS version. Use this id to invoke the TestExecutionService.
   * @param id id or {@code null} for none
   */
  public IosVersion setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * An integer representing the major iOS version. Examples: "8", "9".
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMajorVersion() {
    return majorVersion;
  }

  /**
   * An integer representing the major iOS version. Examples: "8", "9".
   * @param majorVersion majorVersion or {@code null} for none
   */
  public IosVersion setMajorVersion(java.lang.Integer majorVersion) {
    this.majorVersion = majorVersion;
    return this;
  }

  /**
   * An integer representing the minor iOS version. Examples: "1", "2".
   * @return value or {@code null} for none
   */
  public java.lang.Integer getMinorVersion() {
    return minorVersion;
  }

  /**
   * An integer representing the minor iOS version. Examples: "1", "2".
   * @param minorVersion minorVersion or {@code null} for none
   */
  public IosVersion setMinorVersion(java.lang.Integer minorVersion) {
    this.minorVersion = minorVersion;
    return this;
  }

  /**
   * The available Xcode versions for this version.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getSupportedXcodeVersionIds() {
    return supportedXcodeVersionIds;
  }

  /**
   * The available Xcode versions for this version.
   * @param supportedXcodeVersionIds supportedXcodeVersionIds or {@code null} for none
   */
  public IosVersion setSupportedXcodeVersionIds(java.util.List<java.lang.String> supportedXcodeVersionIds) {
    this.supportedXcodeVersionIds = supportedXcodeVersionIds;
    return this;
  }

  /**
   * Tags for this dimension. Examples: "default", "preview", "deprecated".
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTags() {
    return tags;
  }

  /**
   * Tags for this dimension. Examples: "default", "preview", "deprecated".
   * @param tags tags or {@code null} for none
   */
  public IosVersion setTags(java.util.List<java.lang.String> tags) {
    this.tags = tags;
    return this;
  }

  @Override
  public IosVersion set(String fieldName, Object value) {
    return (IosVersion) super.set(fieldName, value);
  }

  @Override
  public IosVersion clone() {
    return (IosVersion) super.clone();
  }

}
