name: integration-tests

on:
  workflow_dispatch:
  issue_comment:
    types: [created]

jobs:

  should_run_it:
    runs-on: ubuntu-latest
    outputs:
      run_integration_tests: ${{ steps.should-run-step.outputs.should_run }}
      pr_number: ${{ steps.pr_number.outputs.number }}
      it_files_changed : ${{ steps.check_files.outputs.it_files_changed }}
    steps:
      - name: Get PR number
        id: pr_number
        if: ${{ github.event_name == 'issue_comment'}}
        run: |
          PR_URL="${{ github.event.issue.pull_request.url }}"
          PR_NUMBER=${PR_URL##*/}
          echo "::set-output name=number::$PR_NUMBER"
      - uses: khan/pull-request-comment-trigger@master
        if: ${{ github.event_name == 'issue_comment'}}
        id: check_issue_comment
        with:
          trigger: '@flank-it'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      # TEMPORARY DISABLED UNTIL WE FIGURE OUT THE BEST METHOD TO RUN INTEGRATION TESTS
      # FIXME BEFORE FINISH EPIC  #1212
      #      - name: Count approve count
      #        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_review'}}
      #        id: approve_count
      #        run: |
      #          PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
      #          echo $PR_NUMBER
      #          echo $GITHUB_REF
      #          export count=$(curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/flank/flank/pulls/${PR_NUMBER}/reviews?per_page=100 -s | grep -i -c '"state": "APPROVED"')
      #          echo $count
      #          echo "::set-output name=approved::${count}"

      - name: Checkout code
        uses: actions/checkout@v2
        if: ${{ github.event_name == 'issue_comment'}}
        with:
          fetch-depth: 2

      - name: Checkout Pull Request
        if: github.event_name == 'issue_comment'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          hub pr checkout ${{ steps.pr_number.outputs.number }}

      - name: check modified files
        id: check_files
        if: github.event_name == 'issue_comment'
        run: |
          git diff --name-only --diff-filter=AMDR master > diffs.txt
          echo "---------------"
          cat diffs.txt
          echo "---------------"
          SHOULD_RUN='false'
          while IFS= read -r file
          do
            if [[ $file == test_runner/* ]] || [[ $file == integration_tests/* ]]; then
              SHOULD_RUN='true'
              break
            fi
          done < diffs.txt
          rm diffs.txt
          echo "Should run IT: ${SHOULD_RUN}"
          echo "::set-output name=it_files_changed::${SHOULD_RUN}"
      - name: Check if integrations tests should run
        id: should-run-step
        env:
          run_it: ${{ (steps.check_issue_comment.outputs.triggered == 'true' && steps.check_files.outputs.it_files_changed == 'true') || github.event_name == 'workflow_dispatch' }}
        run : |
          echo "event name: ${{ github.event_name }}"
          echo "issue command found: ${{ steps.check_issue_comment.outputs.triggered == 'true' }}"
          echo "IT files changed: ${{ steps.check_files.outputs.it_files_changed == 'true' }}"
          echo '::set-output name=should_run::${{ env.run_it }}'
  integration-tests-post-link:
    needs: [ should_run_it ]
    if: github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: 'YYYY-MM-DD HH:mm:ss'
          utcOffset: "+00:00"
      - name: Create comment that tests were triggered
        uses: peter-evans/create-or-update-comment@v1
        if: needs.should_run_it.outputs.run_integration_tests == 'true'
        with:
          issue-number: ${{ needs.should_run_it.outputs.pr_number }}
          body: |
            **Integration tests were triggered, you could track them [here](https://github.com/Flank/flank/actions/runs/${{ github.run_id }})**
            ${{ steps.current-time.outputs.formattedTime }}

      - name: Create comment that test did not run
        uses: peter-evans/create-or-update-comment@v1
        if: needs.should_run_it.outputs.run_integration_tests == 'false'
        with:
          issue-number: ${{ needs.should_run_it.outputs.pr_number }}
          body: |
            **Integration tests did not run, because files under `test_runner/*` or `integration_tests/*` were not changed **
            ${{ steps.current-time.outputs.formattedTime }}

  integration-tests-unix:
    needs: [ should_run_it ]
    if: needs.should_run_it.outputs.run_integration_tests == 'true'
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: '${{ secrets.GITHUB_TOKEN }}'

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Checkout Pull Request
        if: github.event_name != 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          hub pr checkout ${{ needs.should_run_it.outputs.pr_number }}

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle clean build
        uses: eskatos/gradle-command-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEAD_REF: ${{ github.ref }}
        with:
          arguments: "clean build"

      - name: Prepare Google Service Account
        env:
          GCLOUD_KEY: ${{ secrets.GCLOUD_KEY }}
        run: |
          GCLOUD_DIR="$HOME/.config/gcloud/"
          mkdir -p "$GCLOUD_DIR"
          echo "$GCLOUD_KEY" | base64 --decode > "$GCLOUD_DIR/application_default_credentials.json"

      - name: Gradle Integration Tests Android
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: "--info :integration_tests:test --tests IntegrationTests.shouldMatchAndroidSuccessExitCodeAndPattern -Dflank-path=../test_runner/build/libs/flank.jar -Dyml-path=./src/test/resources/flank_android.yml"

      - name: Gradle Integration Tests iOS
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: "--info :integration_tests:test --tests IntegrationTests.shouldMatchIosSuccessExitCodeAndPattern -Dflank-path=../test_runner/build/libs/flank.jar -Dyml-path=./src/test/resources/flank_ios.yml"

  integration-tests-windows:
    needs: [ should_run_it ]
    if: needs.should_run_it.outputs.run_integration_tests == 'true'
    runs-on: windows-2019
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Checkout Pull Request
        if: github.event_name != 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          hub pr checkout ${{ needs.should_run_it.outputs.pr_number }}

      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-2-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-2-gradle-

      - name: Gradle clean build
        shell: cmd
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEAD_REF: ${{ github.ref }}
        run: |
          gradlew.bat clean build

      - name: Prepare Google Service Account
        shell: cmd
        env:
          GCLOUD_KEY: ${{ secrets.GCLOUD_KEY }}
        run: |
          set GCLOUD_DIR="%HOMEPATH%\.config\gcloud"
          mkdir %GCLOUD_DIR%
          echo %GCLOUD_KEY% > gcloud_key.txt
          certutil -decode gcloud_key.txt %GCLOUD_DIR%\application_default_credentials.json

      - name: Gradle Integration Tests Android
        uses: eskatos/gradle-command-action@v1
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        with:
          arguments: "--info :integration_tests:test --tests IntegrationTests.shouldMatchAndroidSuccessExitCodeAndPattern -Dflank-path=../test_runner/build/libs/flank.jar -Dyml-path=./src/test/resources/flank_android.yml"
