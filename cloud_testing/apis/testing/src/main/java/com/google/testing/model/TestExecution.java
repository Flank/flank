/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.testing.model;

/**
 * Specifies a single test to be executed in a single environment.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Testing API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TestExecution extends com.google.api.client.json.GenericJson {

  /**
   * How the host machine(s) are configured. @OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Environment environment;

  /**
   * Unique id set by the backend. @OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Id of the containing TestMatrix. @OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String matrixId;

  /**
   * The cloud project that owns the test execution. @OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * Indicates the current progress of the test execution (e.g., FINISHED). @OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Additional details about the running test. @OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TestDetails testDetails;

  /**
   * How to run the test. @OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TestSpecification testSpecification;

  /**
   * The time this test execution was initially created. @OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String timestamp;

  /**
   * Where the results for this execution are written. @OutputOnly
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ToolResultsStep toolResultsStep;

  /**
   * How the host machine(s) are configured. @OutputOnly
   * @return value or {@code null} for none
   */
  public Environment getEnvironment() {
    return environment;
  }

  /**
   * How the host machine(s) are configured. @OutputOnly
   * @param environment environment or {@code null} for none
   */
  public TestExecution setEnvironment(Environment environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Unique id set by the backend. @OutputOnly
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Unique id set by the backend. @OutputOnly
   * @param id id or {@code null} for none
   */
  public TestExecution setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Id of the containing TestMatrix. @OutputOnly
   * @return value or {@code null} for none
   */
  public java.lang.String getMatrixId() {
    return matrixId;
  }

  /**
   * Id of the containing TestMatrix. @OutputOnly
   * @param matrixId matrixId or {@code null} for none
   */
  public TestExecution setMatrixId(java.lang.String matrixId) {
    this.matrixId = matrixId;
    return this;
  }

  /**
   * The cloud project that owns the test execution. @OutputOnly
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * The cloud project that owns the test execution. @OutputOnly
   * @param projectId projectId or {@code null} for none
   */
  public TestExecution setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Indicates the current progress of the test execution (e.g., FINISHED). @OutputOnly
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Indicates the current progress of the test execution (e.g., FINISHED). @OutputOnly
   * @param state state or {@code null} for none
   */
  public TestExecution setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Additional details about the running test. @OutputOnly
   * @return value or {@code null} for none
   */
  public TestDetails getTestDetails() {
    return testDetails;
  }

  /**
   * Additional details about the running test. @OutputOnly
   * @param testDetails testDetails or {@code null} for none
   */
  public TestExecution setTestDetails(TestDetails testDetails) {
    this.testDetails = testDetails;
    return this;
  }

  /**
   * How to run the test. @OutputOnly
   * @return value or {@code null} for none
   */
  public TestSpecification getTestSpecification() {
    return testSpecification;
  }

  /**
   * How to run the test. @OutputOnly
   * @param testSpecification testSpecification or {@code null} for none
   */
  public TestExecution setTestSpecification(TestSpecification testSpecification) {
    this.testSpecification = testSpecification;
    return this;
  }

  /**
   * The time this test execution was initially created. @OutputOnly
   * @return value or {@code null} for none
   */
  public String getTimestamp() {
    return timestamp;
  }

  /**
   * The time this test execution was initially created. @OutputOnly
   * @param timestamp timestamp or {@code null} for none
   */
  public TestExecution setTimestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Where the results for this execution are written. @OutputOnly
   * @return value or {@code null} for none
   */
  public ToolResultsStep getToolResultsStep() {
    return toolResultsStep;
  }

  /**
   * Where the results for this execution are written. @OutputOnly
   * @param toolResultsStep toolResultsStep or {@code null} for none
   */
  public TestExecution setToolResultsStep(ToolResultsStep toolResultsStep) {
    this.toolResultsStep = toolResultsStep;
    return this;
  }

  @Override
  public TestExecution set(String fieldName, Object value) {
    return (TestExecution) super.set(fieldName, value);
  }

  @Override
  public TestExecution clone() {
    return (TestExecution) super.clone();
  }

}
